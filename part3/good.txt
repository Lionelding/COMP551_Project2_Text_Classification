____________________________________________________________________________________________________
------Loading Data-----

The shape of Train_in is:(80000L,)
Number of Training_in samples is: 80000
The shape of Train_out is : (80000L,)
Number of Training_out results is: 80000
The shape of Validate_in is : (8639L,)
Number of Validating_in samples is: 8639
The shape of Validate_out is : (8639L,)
Number of Validating_out samples is: 8639

-----Data Loaded-----

samples is : [0, 16000, 32000, 48000, 64000, 80000]
k_fold number is : 5
____________________________________________________________________________________________________
-----Step 0 :Starting k_fold testing-----

train_k_in start from : 0 to :0
and train_k_in start from : 16000 to :79999
train_k_in shape is : (64000L,)
test_k_in shape is : (16000L,)
Feature Extracting of training data
n_samples: 64000, n_features: 92483
()
Feature Extracting of testing data
n_samples: 16000, n_features: 92483
()
====================================================================================================
Ridge Classifier
____________________________________________________________________________________________________
Training: 
RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='lsqr',
        tol=0.01)
train time: 5.201s
['math' 'cs' 'stat' ..., 'math' 'math' 'cs']
test time:  0.013s
accuracy:   0.922
For each category, 15 most frequent words are : 
math: hoare letrec ide coq declarative combinators compile polymorphic abella...
cs: citation meshes spreadsheet telescoping words opponent speech audio queue...
stat: nonstandard equiangular fermat diophantine homogenization infinitesimal...
physics: dose advection physical beam hurricane hurricanes thermodynamics ast...
====================================================================================================
Perceptron
____________________________________________________________________________________________________
Training: 
Perceptron(alpha=0.0001, class_weight=None, eta0=1.0, fit_intercept=True,
      n_iter=50, n_jobs=1, penalty=None, random_state=0, shuffle=True,
      verbose=0, warm_start=False)
train time: 5.169s
['math' 'cs' 'stat' ..., 'math' 'math' 'cs']
test time:  0.014s
accuracy:   0.887
For each category, 15 most frequent words are : 
math: expertises expertise experimentaly expert experiments experimentos expe...
cs: te pagerank insufficiently barcodes semantics spreadsheet multigrid brand...
stat: psg mathematicians filters spectrahedron category groups mathematics cu...
physics: reynolds hurricane tornadoes ocean adding eqn submitted obsolete bea...
====================================================================================================
Naive Bayes
____________________________________________________________________________________________________
Training: 
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
train time: 0.131s
['math' 'cs' 'stat' ..., 'math' 'math' 'cs']
test time:  0.013s
accuracy:   0.907
For each category, 15 most frequent words are : 
math: expedient expediency expectancy expedia expecting expectiles expectile ...
cs: new used results algorithms approach information model using systems time...
stat: result study compact paper theorem category finite algebras spaces grou...
physics: plasma used method high wave using physics results magnetic model ti...
====================================================================================================
LinearSVC with L1-based feature selection
____________________________________________________________________________________________________
Training: 
Pipeline(steps=[('feature_selection', LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)), ('classification', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])
train time: 17.819s
['math' 'cs' 'stat' ..., 'math' 'math' 'cs']
test time:  0.060s
accuracy:   0.918
====================================================================================================
Passive-Aggressive
____________________________________________________________________________________________________
Training: 
PassiveAggressiveClassifier(C=1.0, class_weight=None, fit_intercept=True,
              loss='hinge', n_iter=50, n_jobs=1, random_state=None,
              shuffle=True, verbose=0, warm_start=False)
train time: 6.080s
['math' 'cs' 'stat' ..., 'math' 'math' 'cs']
test time:  0.013s
accuracy:   0.902
For each category, 15 most frequent words are : 
math: firedrichs firedrake fipp2 firebreak firebird fireballs fireball firear...
cs: te pagerank anonymization barcodes multigrid automata mem ipursuit brand ...
stat: pathwise psg mathematics goedel monoidal emden spectrahedron diophantin...
physics: tornadoes phantom submitted epics adding radiation cern hurricane ob...
____________________________________________________________________________________________________
-----Step 1 :Starting k_fold testing-----

train_k_in start from : 0 to :16000
and train_k_in start from : 32000 to :79999
train_k_in shape is : (64000L,)
test_k_in shape is : (16000L,)
Feature Extracting of training data
n_samples: 64000, n_features: 92220
()
Feature Extracting of testing data
n_samples: 16000, n_features: 92220
()
====================================================================================================
Ridge Classifier
____________________________________________________________________________________________________
Training: 
RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='lsqr',
        tol=0.01)
train time: 5.431s
['cs' 'math' 'cs' ..., 'cs' 'physics' 'cs']
test time:  0.014s
accuracy:   0.923
For each category, 15 most frequent words are : 
math: sos uustalu tabled dsls llvm executing formalisation hoare luminy abell...
cs: kljn complexity words spreadsheet citation audio queue speech preconditio...
stat: primes infinitesimals conjecture diagrammatic fermat siam neutrosophic ...
physics: beam conformational thermodynamics seismic astronomical wrf thermody...
====================================================================================================
Perceptron
____________________________________________________________________________________________________
Training: 
Perceptron(alpha=0.0001, class_weight=None, eta0=1.0, fit_intercept=True,
      n_iter=50, n_jobs=1, penalty=None, random_state=0, shuffle=True,
      verbose=0, warm_start=False)
train time: 5.262s
['cs' 'math' 'cs' ..., 'cs' 'physics' 'cs']
test time:  0.014s
accuracy:   0.891
For each category, 15 most frequent words are : 
math: expensively expel expensive expenses expense expenditures expenditure e...
cs: anonymity ipursuit swarm computes lossy sought dahlquist pagerank enforce...
stat: unknowns categories conjectures spaces algebra mathematics infinity cat...
physics: earthquake thermodynamics mechanics ocean hurricane geophysical phen...
====================================================================================================
Naive Bayes
____________________________________________________________________________________________________
Training: 
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
train time: 0.134s
['cs' 'math' 'cs' ..., 'cs' 'physics' 'cs']
test time:  0.020s
accuracy:   0.906
For each category, 15 most frequent words are : 
math: exp_n exp_k exp_g exp_3 exp_2 exp_1 exp3 exp exoticness exoticism exoti...
cs: present used results algorithms approach information model using systems ...
stat: result study compact paper category theorem finite algebras spaces grou...
physics: based used method wave high using results magnetic physics time mode...
====================================================================================================
LinearSVC with L1-based feature selection
____________________________________________________________________________________________________
Training: 
Pipeline(steps=[('feature_selection', LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)), ('classification', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])
train time: 19.007s
['cs' 'math' 'cs' ..., 'cs' 'physics' 'cs']
test time:  0.070s
accuracy:   0.921
====================================================================================================
Passive-Aggressive
____________________________________________________________________________________________________
Training: 
PassiveAggressiveClassifier(C=1.0, class_weight=None, fit_intercept=True,
              loss='hinge', n_iter=50, n_jobs=1, random_state=None,
              shuffle=True, verbose=0, warm_start=False)
train time: 6.528s
['cs' 'math' 'cs' ..., 'cs' 'physics' 'cs']
test time:  0.013s
accuracy:   0.905
For each category, 15 most frequent words are : 
math: finset fins finrel finnish finn finkelstein finkelshtein finkelberg fin...
cs: pagerank barcodes mem neural swarm ipursuit cmos enforce audio anonymity ...
stat: algebra knot codistributions diophantine homogenization conjectures cat...
physics: summarise electromagnetic thermodynamic reynolds wrf radiation obsol...
____________________________________________________________________________________________________
-----Step 2 :Starting k_fold testing-----

train_k_in start from : 0 to :32000
and train_k_in start from : 48000 to :79999
train_k_in shape is : (64000L,)
test_k_in shape is : (16000L,)
Feature Extracting of training data
n_samples: 64000, n_features: 92200
()
Feature Extracting of testing data
n_samples: 16000, n_features: 92200
()
====================================================================================================
Ridge Classifier
____________________________________________________________________________________________________
Training: 
RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='lsqr',
        tol=0.01)
train time: 5.727s
['math' 'stat' 'math' ..., 'cs' 'cs' 'cs']
test time:  0.014s
accuracy:   0.923
For each category, 15 most frequent words are : 
math: quantifiers formalisation dsls tricky ccp coq parametricity tabled bool...
cs: kljn pso pagerank bisimulation satisfiability spreadsheet audio precondit...
stat: infinitesimals topos nonstandard hypergeometric eigenvalues diagrammati...
physics: physical conformational climate seismic beam thermodynamic astronomi...
====================================================================================================
Perceptron
____________________________________________________________________________________________________
Training: 
Perceptron(alpha=0.0001, class_weight=None, eta0=1.0, fit_intercept=True,
      n_iter=50, n_jobs=1, penalty=None, random_state=0, shuffle=True,
      verbose=0, warm_start=False)
train time: 5.551s
['math' 'stat' 'math' ..., 'cs' 'cs' 'cs']
test time:  0.015s
accuracy:   0.890
For each category, 15 most frequent words are : 
math: exhaust exhand exert exhaled exh exgm exfiltration exfiltrate exetensio...
cs: document reparameterization eigenpairs shortcuts nonconforming stackmc in...
stat: transseries halt codistributions s_y perturbed pathwise category sinuso...
physics: thermodynamics hurricane adding ct students force fermi phys eqn geo...
====================================================================================================
Naive Bayes
____________________________________________________________________________________________________
Training: 
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
train time: 0.137s
['math' 'stat' 'math' ..., 'cs' 'physics' 'cs']
test time:  0.012s
accuracy:   0.908
For each category, 15 most frequent words are : 
math: executes executed excruciatingly execute executable executability execi...
cs: new used results algorithms approach information using model systems time...
stat: result study compact paper theorem category finite algebras spaces grou...
physics: used plasma method high using wave results magnetic physics model ti...
====================================================================================================
LinearSVC with L1-based feature selection
____________________________________________________________________________________________________
Training: 
Pipeline(steps=[('feature_selection', LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)), ('classification', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])
train time: 19.138s
['math' 'stat' 'math' ..., 'cs' 'cs' 'cs']
test time:  0.070s
accuracy:   0.921
====================================================================================================
Passive-Aggressive
____________________________________________________________________________________________________
Training: 
PassiveAggressiveClassifier(C=1.0, class_weight=None, fit_intercept=True,
              loss='hinge', n_iter=50, n_jobs=1, random_state=None,
              shuffle=True, verbose=0, warm_start=False)
train time: 6.168s
['math' 'stat' 'math' ..., 'cs' 'cs' 'cs']
test time:  0.019s
accuracy:   0.905
For each category, 15 most frequent words are : 
math: figiel fights fifo fighting fight figarch figallo fig fiftymy fifties f...
cs: robots sought aspremont rrf eigenpairs insufficiently automata fpras shor...
stat: diophantine category diagrammatic categories perturbed enkfs codistribu...
physics: charge students mechanics nudging hurricane reynolds climate force b...
____________________________________________________________________________________________________
-----Step 3 :Starting k_fold testing-----

train_k_in start from : 0 to :48000
and train_k_in start from : 64000 to :79999
train_k_in shape is : (64000L,)
test_k_in shape is : (16000L,)
Feature Extracting of training data
n_samples: 64000, n_features: 92345
()
Feature Extracting of testing data
n_samples: 16000, n_features: 92345
()
====================================================================================================
Ridge Classifier
____________________________________________________________________________________________________
Training: 
RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='lsqr',
        tol=0.01)
train time: 5.307s
['physics' 'cs' 'physics' ..., 'stat' 'stat' 'stat']
test time:  0.013s
accuracy:   0.926
For each category, 15 most frequent words are : 
math: racket xpath letrec executing luminy tricky algol abella clp formalisat...
cs: queue opponent turing audio bisimulation software citation kljn cad robot...
stat: cardinal notes isoperimetric diagrammatic eigenvalues prime diophantine...
physics: physicists rock refractive hurricanes beam hurricane physical thermo...
====================================================================================================
Perceptron
____________________________________________________________________________________________________
Training: 
Perceptron(alpha=0.0001, class_weight=None, eta0=1.0, fit_intercept=True,
      n_iter=50, n_jobs=1, penalty=None, random_state=0, shuffle=True,
      verbose=0, warm_start=False)
train time: 5.288s
['physics' 'cs' 'physics' ..., 'stat' 'stat' 'stat']
test time:  0.013s
accuracy:   0.897
For each category, 15 most frequent words are : 
math: expansivity expansive exp_n expansions expanse expands expanding expand...
cs: euclidian answered reachability pilleboue indexing aspremont persistent d...
stat: wheather irreducible mathematicians quickest rigorously curse spectrahe...
physics: mesoscale dispute thermodynamics reflective beam currents adding obs...
====================================================================================================
Naive Bayes
____________________________________________________________________________________________________
Training: 
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
train time: 0.144s
['physics' 'cs' 'physics' ..., 'stat' 'stat' 'stat']
test time:  0.013s
accuracy:   0.910
For each category, 15 most frequent words are : 
math: exibility exhaustively exiarxiv exhumation exhibits exhibitors exhibiti...
cs: present used results approach algorithms information model using systems ...
stat: result study compact paper category theorem finite algebras spaces grou...
physics: used plasma method high using results wave magnetic physics model ti...
====================================================================================================
LinearSVC with L1-based feature selection
____________________________________________________________________________________________________
Training: 
Pipeline(steps=[('feature_selection', LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)), ('classification', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])
train time: 19.627s
['physics' 'cs' 'physics' ..., 'stat' 'stat' 'stat']
test time:  0.065s
accuracy:   0.921
====================================================================================================
Passive-Aggressive
____________________________________________________________________________________________________
Training: 
PassiveAggressiveClassifier(C=1.0, class_weight=None, fit_intercept=True,
              loss='hinge', n_iter=50, n_jobs=1, random_state=None,
              shuffle=True, verbose=0, warm_start=False)
train time: 6.284s
['physics' 'cs' 'physics' ..., 'stat' 'stat' 'stat']
test time:  0.014s
accuracy:   0.907
For each category, 15 most frequent words are : 
math: finishers finished finish finis fining fini fingertips fingertip finger...
cs: pilleboue answered ambipolar turing automata aspremont rrf deterministica...
stat: mathematicians smarandache wheather homogenization halt sinusoid neutro...
physics: hurricane cern currents thermodynamics newtonian submitted relativit...
____________________________________________________________________________________________________
-----Step 4 :Starting k_fold testing-----

train_k_in start from : 0 to :64000
and train_k_in start from : 0 to :0
train_k_in shape is : (64000L,)
test_k_in shape is : (16000L,)
Feature Extracting of training data
n_samples: 64000, n_features: 91954
()
Feature Extracting of testing data
n_samples: 16000, n_features: 91954
()
====================================================================================================
Ridge Classifier
____________________________________________________________________________________________________
Training: 
RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
        max_iter=None, normalize=False, random_state=None, solver='lsqr',
        tol=0.01)
train time: 5.802s
['physics' 'physics' 'cs' ..., 'math' 'math' 'math']
test time:  0.013s
accuracy:   0.926
For each category, 15 most frequent words are : 
math: auckland instructions declarations coq clp dsls abella formalisation lu...
cs: persistent citation turing rbf opponent queue spreadsheet pso robot pager...
stat: algebras siam prime smarandache infinitesimals painlev mathematicians t...
physics: beam wrf physicists antenna thermodynamic thermodynamics accelerator...
====================================================================================================
Perceptron
____________________________________________________________________________________________________
Training: 
Perceptron(alpha=0.0001, class_weight=None, eta0=1.0, fit_intercept=True,
      n_iter=50, n_jobs=1, penalty=None, random_state=0, shuffle=True,
      verbose=0, warm_start=False)
train time: 5.537s
['physics' 'physics' 'cs' ..., 'math' 'math' 'math']
test time:  0.013s
accuracy:   0.891
For each category, 15 most frequent words are : 
math: exparadox expantions expand expansivity expansions expansion expanse ex...
cs: query insufficiently store preconditioner semantics encryption reachabili...
stat: cohomology category infinity categories primes certain groups homogeniz...
physics: admin modularity adding seismic convective obsolete hurricanes beams...
====================================================================================================
Naive Bayes
____________________________________________________________________________________________________
Training: 
MultinomialNB(alpha=0.01, class_prior=None, fit_prior=True)
train time: 0.138s
['physics' 'physics' 'cs' ..., 'math' 'math' 'math']
test time:  0.019s
accuracy:   0.906
For each category, 15 most frequent words are : 
math: exogeneous exogeneity exiting exocytosis exo exner exn exmined exmaples...
cs: new results used algorithms approach information model using systems time...
stat: result study compact paper category theorem finite algebras groups spac...
physics: plasma used method high wave using results physics magnetic time mod...
====================================================================================================
LinearSVC with L1-based feature selection
____________________________________________________________________________________________________
Training: 
Pipeline(steps=[('feature_selection', LinearSVC(C=1.0, class_weight=None, dual=False, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l1', random_state=None, tol=0.001,
     verbose=0)), ('classification', LinearSVC(C=1.0, class_weight=None, dual=True, fit_intercept=True,
     intercept_scaling=1, loss='squared_hinge', max_iter=1000,
     multi_class='ovr', penalty='l2', random_state=None, tol=0.0001,
     verbose=0))])
train time: 19.126s
['physics' 'physics' 'cs' ..., 'math' 'math' 'math']
test time:  0.063s
accuracy:   0.923
====================================================================================================
Passive-Aggressive
____________________________________________________________________________________________________
Training: 
PassiveAggressiveClassifier(C=1.0, class_weight=None, fit_intercept=True,
              loss='hinge', n_iter=50, n_jobs=1, random_state=None,
              shuffle=True, verbose=0, warm_start=False)
train time: 5.999s
['physics' 'physics' 'cs' ..., 'math' 'math' 'math']
test time:  0.013s
accuracy:   0.906
For each category, 15 most frequent words are : 
math: fis01 fis firth fisherian firsts firstorder firstly firstkey firsthand ...
cs: gpstuff judgment store spreadsheet pilleboue turing semantics lexical det...
stat: hjm ciwnls homology goedel graphon homogenization spectrahedron sinusoi...
physics: electromagnetic interviews phenomenological obsolete phys force addi...
